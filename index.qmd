---
title: "Overall Data Structure"
format: html
---

```{r, echo=FALSE, message=FALSE}
library(dplyr)

# Read in data 
Serengeti <- read.csv("https://github.com/ocelots-rcn/quarto-serengeti/raw/4b0d01466d8361cdf70d9390c03d04754ca09a07/S1-11_filtered.csv")

# Generate master species list
speciesList <- as.list(Serengeti %>% distinct(Species))

# Select cam specific data from and filter to 1 row per camera, discard observation data
camData_distinct <- Serengeti %>% distinct(Camera.Site, .keep_all = TRUE)     
camData <- select(camData_distinct, Camera.Site:Camera.Mount)

ojs_define(serengeti = Serengeti, speciesList = speciesList, camData = camData)
```

```{ojs}
//| code-fold: true

import { aq, op } from '@uwdata/arquero'
species_filt = aq.table(serengeti)
  .filter(aq.escape(r => op.includes(SpeciesInput, r.Species)))
  .reify()
```

::: panel-tabset

## Obs. by Species

```{ojs}
//| code-fold: true

spec_counts = species_filt
  .groupby("Species")
  .rollup({
    count: d => op.count()
  })
  .orderby('Species')

Plot.plot({
  marks: [
    Plot.barY(spec_counts, {x: "Species", y: "count"})
  ],
  width: 786,
  marginLeft: 75,
  marginBottom: 100, 
  x: { tickRotate: 90 }
})
```

## Obs. by Camera

```{ojs}
//| code-fold: true

cam_counts = species_filt
  .groupby("Camera.Site")
  .rollup({
    Freq: d => op.count()
  })

Plot.plot({
  x: { label: "Number of Images Captured", domain: [0, 4700] },
  y: { label: "Number of Camera Sites", domain: [0, 50] },
  marks: [
    Plot.rectY(cam_counts, 
      Plot.binX({y: "count"}, {x: {thresholds: 30, value: "Freq"}})
    )
  ],
  width: 786,
  marginLeft: 75
})
```

## Obs. by Location

```{ojs}
//| code-fold: true

ll_counts = species_filt
  .groupby("Camera.Site")
  .rollup({
    Freq: d => op.count()
  })
  .join_left(aq.table(camData))

Plot.plot({
  x: {
    label: "Longitude (m)",
    domain: [690000, 745000]
  },
  y: {
    label: "Latitude (m)",
    domain: [9706000, 9738000]
  },
  marks: [
    Plot.dot(ll_counts, {x: "Longitude..m.", y: "Latitude..m.", r: d => d.Freq/5000})
  ],
  width: 786,
  marginLeft: 75
})
```

:::

```{ojs, echo = FALSE}
//| code-fold: true

// Create checkbox of species
viewof SpeciesInput = Inputs.checkbox(
  speciesList["Species"].sort(),
  { value: speciesList["Species"].sort(),
    label: "Species to include:"
  }
)
```
